@page "/"
@attribute [Authorize(Roles = "Admin,Dev")]
@inject IPageService PageService
@inject IUserService UserService
@inject INotificationService NotificationService
@inject NavigationManager NavigationManager

@using Backend.CMS.Application.DTOs
@using Backend.CMS.Application.Interfaces
@using Backend.CMS.Application.Interfaces.Services
@using Backend.CMS.Web.Components.Shared
@using Backend.CMS.Web.Services
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims

<PageTitle>Dashboard - CMS</PageTitle>

<div class="space-y-6">
    <!-- Welcome Panel -->
    <div class="bg-gradient-to-r from-blue-600 to-blue-700 rounded-lg shadow-lg p-6 text-white">
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-2xl font-bold">Welcome back!</h1>
                <p class="mt-1 text-blue-100">
                    <AuthorizeView>
                        <Authorized Context="context">
                            @GetWelcomeMessage(context.User)
                        </Authorized>
                    </AuthorizeView>
                </p>
            </div>
            <div class="hidden sm:block">
                <i class="fas fa-tachometer-alt text-4xl text-blue-200"></i>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <StatCard Title="Total Pages" Value="@totalPages" Icon="fas fa-file-alt"
                  IconColor="text-blue-600"
                  BackgroundColor="bg-blue-50 dark:bg-blue-900/20"
                  IsLoading="@isLoadingStats" />

        <StatCard Title="Published Pages" Value="@publishedPages" Icon="fas fa-globe"
                  IconColor="text-green-600"
                  BackgroundColor="bg-green-50 dark:bg-green-900/20"
                  IsLoading="@isLoadingStats" />

        <AuthorizeView Roles="Admin,Dev">
            <StatCard Title="Total Users" Value="@totalUsers" Icon="fas fa-users"
                      IconColor="text-purple-600"
                      BackgroundColor="bg-purple-50 dark:bg-purple-900/20"
                      IsLoading="@isLoadingStats" />
        </AuthorizeView>

        <StatCard Title="Draft Pages" Value="@draftPages" Icon="fas fa-edit"
                  IconColor="text-yellow-600"
                  BackgroundColor="bg-yellow-50 dark:bg-yellow-900/20"
                  IsLoading="@isLoadingStats" />
    </div>

    <!-- Recent Pages and Quick Actions -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Recent Pages -->
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg border border-gray-200 dark:border-gray-700">
            <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                        <i class="fas fa-clock mr-2"></i>
                        Recent Pages
                    </h3>
                    <a href="/pages" class="text-sm text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">
                        View all
                    </a>
                </div>
            </div>
            <div class="px-6 py-4">
                @if (isLoadingRecentPages)
                {
                    <div class="space-y-3">
                        @for (int i = 0; i < 3; i++)
                        {
                            <div class="animate-pulse flex space-x-3">
                                <div class="rounded-lg bg-gray-200 dark:bg-gray-700 h-10 w-10"></div>
                                <div class="flex-1 space-y-2">
                                    <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4"></div>
                                    <div class="h-3 bg-gray-200 dark:bg-gray-700 rounded w-1/2"></div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else if (recentPages.Any())
                {
                    <div class="space-y-3">
                        @foreach (var page in recentPages)
                        {
                            <div class="flex items-center space-x-3 p-3 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg transition-colors">
                                <div class="flex-shrink-0">
                                    <div class="h-8 w-8 rounded-lg bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center">
                                        <i class="fas fa-file-alt text-white text-xs"></i>
                                    </div>
                                </div>
                                <div class="flex-1 min-w-0">
                                    <p class="text-sm font-medium text-gray-900 dark:text-white truncate">@(page.Name)</p>
                                    <p class="text-xs text-gray-500 dark:text-gray-400">
                                        <span class="@GetStatusBadgeClasses(page.Status)">@(@page.Status)</span> • @(page.UpdatedAt.ToString("MMM dd"))
                                    </p>
                                </div>
                                <div class="flex-shrink-0">
                                    <a href="/pages/edit/@(@page.Id)" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
                                        <i class="fas fa-arrow-right"></i>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-8">
                        <i class="fas fa-file-alt text-3xl text-gray-300 dark:text-gray-600 mb-2"></i>
                        <p class="text-sm text-gray-500 dark:text-gray-400">No pages yet</p>
                        <a href="/pages?action=create" class="mt-2 text-sm text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">
                            Create your first page
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg border border-gray-200 dark:border-gray-700">
            <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                    <i class="fas fa-bolt mr-2"></i>
                    Quick Actions
                </h3>
            </div>
            <div class="px-6 py-4">
                <div class="grid grid-cols-1 gap-3">
                    <button @onclick="HandleCreatePage" class="action-button bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/40">
                        <i class="fas fa-plus icon"></i>
                        <div>
                            <p class="text-sm font-medium text-blue-900 dark:text-blue-100">Create New Page</p>
                            <p class="text-xs text-blue-700 dark:text-blue-300">Build a new page for your website</p>
                        </div>
                    </button>

                    <button @onclick="HandleViewPages" class="action-button bg-green-50 dark:bg-green-900/20 hover:bg-green-100 dark:hover:bg-green-900/40">
                        <i class="fas fa-list icon"></i>
                        <div>
                            <p class="text-sm font-medium text-green-900 dark:text-green-100">Manage Pages</p>
                            <p class="text-xs text-green-700 dark:text-green-300">View and edit existing pages</p>
                        </div>
                    </button>

                    <AuthorizeView Roles="Admin,Dev">
                        <button @onclick="HandleViewUsers" class="action-button bg-purple-50 dark:bg-purple-900/20 hover:bg-purple-100 dark:hover:bg-purple-900/40">
                            <i class="fas fa-users icon"></i>
                            <div>
                                <p class="text-sm font-medium text-purple-900 dark:text-purple-100">Manage Users</p>
                                <p class="text-xs text-purple-700 dark:text-purple-300">View and manage user accounts</p>
                            </div>
                        </button>
                    </AuthorizeView>

                    <button @onclick="HandleViewAnalytics" class="action-button bg-indigo-50 dark:bg-indigo-900/20 hover:bg-indigo-100 dark:hover:bg-indigo-900/40">
                        <i class="fas fa-chart-bar icon"></i>
                        <div>
                            <p class="text-sm font-medium text-indigo-900 dark:text-indigo-100">View Analytics</p>
                            <p class="text-xs text-indigo-700 dark:text-indigo-300">Check your website performance</p>
                        </div>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- System Status -->
    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg border border-gray-200 dark:border-gray-700">
        <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
            <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                <i class="fas fa-server mr-2"></i>
                System Status
            </h3>
        </div>
        <div class="px-6 py-4">
            <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                <StatusIndicator Label="API Status" Status="Online" />
                <StatusIndicator Label="Database" Status="Connected" />
                <StatusIndicator Label="Cache" Status="Active" />
            </div>
        </div>
    </div>
</div>

@code {
    private bool isLoadingStats = true;
    private bool isLoadingRecentPages = true;

    private int totalPages = 0;
    private int publishedPages = 0;
    private int draftPages = 0;
    private int totalUsers = 0;

    private List<PageListDto> recentPages = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        try
        {
            await LoadStats();
            await LoadRecentPages();
            await NotificationService.ShowSuccessAsync("Dashboard loaded successfully");
        }
        catch (Exception ex)
        {
            await NotificationService.ShowErrorAsync("Failed to load dashboard data", ex.Message);
        }
    }

    private async Task LoadStats()
    {
        try
        {
            isLoadingStats = true;
            StateHasChanged();

            var pages = await PageService.GetPagesAsync(1, 1000);
            totalPages = pages.Count;
            publishedPages = pages.Count(p => p.Status == PageStatus.Published);
            draftPages = pages.Count(p => p.Status == PageStatus.Draft);

            try
            {
                var (users, count) = await UserService.GetUsersAsync(1, 1000);
                totalUsers = count;
            }
            catch (HttpRequestException ex) when (ex.StatusCode == System.Net.HttpStatusCode.Forbidden)
            {
                totalUsers = 0;
                Console.WriteLine("Access to user data forbidden.");
            }
        }
        catch (Exception ex)
        {
            await NotificationService.ShowErrorAsync("Failed to load statistics", ex.Message);
        }
        finally
        {
            isLoadingStats = false;
            StateHasChanged();
        }
    }

    private async Task LoadRecentPages()
    {
        try
        {
            isLoadingRecentPages = true;
            StateHasChanged();

            var pages = await PageService.GetPagesAsync(1, 10);
            recentPages = pages.OrderByDescending(p => p.UpdatedAt).Take(5).ToList();
        }
        catch (Exception ex)
        {
            await NotificationService.ShowErrorAsync("Failed to load recent pages", ex.Message);
        }
        finally
        {
            isLoadingRecentPages = false;
            StateHasChanged();
        }
    }

    private void HandleCreatePage() => NavigationManager.NavigateTo("/pages?action=create");

    private void HandleViewPages() => NavigationManager.NavigateTo("/pages");

    private void HandleViewUsers() => NavigationManager.NavigateTo("/users");

    private void HandleViewAnalytics() => NavigationManager.NavigateTo("/analytics");

    private string GetWelcomeMessage(ClaimsPrincipal user)
    {
        var firstName = user.FindFirst("firstName")?.Value ?? user.Identity?.Name;
        var role = user.FindFirst(ClaimTypes.Role)?.Value;
        return $"Good to see you, {(string.IsNullOrWhiteSpace(firstName) ? "User" : firstName)}{(string.IsNullOrWhiteSpace(role) ? "" : $" ({role})")}. Here's what's happening with your CMS.";
    }

    private string GetStatusBadgeClasses(PageStatus status)
    {
        var baseClass = "inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium";
        return status switch
        {
            PageStatus.Published => $"{baseClass} bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200",
            PageStatus.Draft => $"{baseClass} bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200",
            PageStatus.Archived => $"{baseClass} bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200",
            _ => $"{baseClass} bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200"
        };
    }
}
