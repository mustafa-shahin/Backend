@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<aside class="@GetSidebarClasses()">
    <!-- Logo/Brand -->
    <div class="@GetBrandSectionClasses()">
        @if (!IsCollapsed)
        {
            <div class="flex items-center space-x-3">
                <div class="w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center">
                    <i class="fas fa-cog text-white text-sm"></i>
                </div>
                <div>
                    <h1 class="text-lg font-bold text-gray-900 dark:text-white">CMS</h1>
                    <p class="text-xs text-gray-500 dark:text-gray-400">Dashboard</p>
                </div>
            </div>
        }
        else
        {
            <div class="w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center mx-auto">
                <i class="fas fa-cog text-white text-sm"></i>
            </div>
        }
    </div>

    <!-- Navigation -->
    <nav class="flex-1 mt-8">
        <ul class="space-y-2">
            <!-- Dashboard -->
            <li>
                <NavLink href="/" Match="NavLinkMatch.All" class="@GetNavLinkClasses()">
                    <i class="fas fa-tachometer-alt w-5"></i>
                    @if (!IsCollapsed)
                    {
                        <span>Dashboard</span>
                    }
                </NavLink>
            </li>

            <!-- Pages -->
            <li>
                <NavLink href="/pages" class="@GetNavLinkClasses()">
                    <i class="fas fa-file-alt w-5"></i>
                    @if (!IsCollapsed)
                    {
                        <span>Pages</span>
                        <span class="ml-auto bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs font-medium px-2 py-0.5 rounded-full">@pageCount</span>
                    }
                </NavLink>
            </li>

            <!-- Users -->
            <AuthorizeView Roles="Admin,Dev">
                <li>
                    <NavLink href="/users" class="@GetNavLinkClasses()">
                        <i class="fas fa-users w-5"></i>
                        @if (!IsCollapsed)
                        {
                            <span>Users</span>
                        }
                    </NavLink>
                </li>
            </AuthorizeView>

            <!-- Products -->
            <li>
                <NavLink href="/products" class="@GetNavLinkClasses()">
                    <i class="fas fa-box w-5"></i>
                    @if (!IsCollapsed)
                    {
                        <span>Products</span>
                    }
                </NavLink>
            </li>

            <!-- Categories -->
            <li>
                <NavLink href="/categories" class="@GetNavLinkClasses()">
                    <i class="fas fa-tags w-5"></i>
                    @if (!IsCollapsed)
                    {
                        <span>Categories</span>
                    }
                </NavLink>
            </li>

            <!-- Files -->
            <li>
                <NavLink href="/files" class="@GetNavLinkClasses()">
                    <i class="fas fa-folder w-5"></i>
                    @if (!IsCollapsed)
                    {
                        <span>Files</span>
                    }
                </NavLink>
            </li>

            <!-- Analytics -->
            <li>
                <NavLink href="/analytics" class="@GetNavLinkClasses()">
                    <i class="fas fa-chart-bar w-5"></i>
                    @if (!IsCollapsed)
                    {
                        <span>Analytics</span>
                    }
                </NavLink>
            </li>

            <!-- Divider -->
            @if (!IsCollapsed)
            {
                <li class="py-2">
                    <hr class="border-gray-200 dark:border-gray-700" />
                </li>
            }

            <!-- Settings Section -->
            @if (!IsCollapsed)
            {
                <li class="px-3 py-2">
                    <p class="text-xs font-semibold text-gray-400 dark:text-gray-500 uppercase tracking-wider">
                        Settings
                    </p>
                </li>
            }

            <!-- Company -->
            <AuthorizeView Roles="Admin,Dev">
                <li>
                    <NavLink href="/company" class="@GetNavLinkClasses()">
                        <i class="fas fa-building w-5"></i>
                        @if (!IsCollapsed)
                        {
                            <span>Company</span>
                        }
                    </NavLink>
                </li>
            </AuthorizeView>

            <!-- System Settings -->
            <AuthorizeView Roles="Dev">
                <li>
                    <NavLink href="/system" class="@GetNavLinkClasses()">
                        <i class="fas fa-cogs w-5"></i>
                        @if (!IsCollapsed)
                        {
                            <span>System</span>
                        }
                    </NavLink>
                </li>
            </AuthorizeView>
        </ul>
    </nav>

    <!-- User Section -->
    <div class="@GetUserSectionClasses()">
        <AuthorizeView>
            <Authorized>
                @if (!IsCollapsed)
                {
                    <div class="flex items-center space-x-3">
                        <div class="w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-500 rounded-full flex items-center justify-center">
                            <i class="fas fa-user text-white text-xs"></i>
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="text-sm font-medium text-gray-900 dark:text-white truncate">
                                @GetUserDisplayName(context.User)
                            </p>
                            <p class="text-xs text-gray-500 dark:text-gray-400 truncate">
                                @GetUserRole(context.User)
                            </p>
                        </div>
                    </div>
                }
                else
                {
                    <div class="w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-500 rounded-full flex items-center justify-center mx-auto">
                        <i class="fas fa-user text-white text-xs"></i>
                    </div>
                }
            </Authorized>
        </AuthorizeView>
    </div>
</aside>

@code {
    [Parameter] public bool IsCollapsed { get; set; }
    [Parameter] public EventCallback<bool> IsCollapsedChanged { get; set; }

    private int pageCount = 0;

    protected override async Task OnInitializedAsync()
    {
        // Load counts for badges
        await LoadCounts();
    }

    private async Task LoadCounts()
    {
        try
        {
            // This would be implemented with actual service calls
            pageCount = 0; // await PageService.GetCountAsync();
        }
        catch (Exception ex)
        {
            // Log error but don't fail the component
            Console.WriteLine($"Error loading counts: {ex.Message}");
        }
    }

    private string GetSidebarClasses()
    {
        var baseClasses = "fixed top-0 left-0 z-40 h-screen transition-all duration-300 bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 shadow-lg";
        var widthClass = IsCollapsed ? "w-16" : "w-64";
        return $"{baseClasses} {widthClass}";
    }

    private string GetBrandSectionClasses()
    {
        return IsCollapsed ? "p-4 border-b border-gray-200 dark:border-gray-700" : "p-6 border-b border-gray-200 dark:border-gray-700";
    }

    private string GetNavLinkClasses()
    {
        var baseClasses = "flex items-center space-x-3 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 hover:bg-gray-100 dark:hover:bg-gray-700";
        
        if (IsCollapsed)
        {
            baseClasses += " justify-center";
        }
        
        return baseClasses;
    }

    private string GetUserSectionClasses()
    {
        return IsCollapsed ? "p-4 border-t border-gray-200 dark:border-gray-700" : "p-6 border-t border-gray-200 dark:border-gray-700";
    }

    private string GetUserDisplayName(ClaimsPrincipal user)
    {
        var firstName = user.FindFirst("firstName")?.Value ?? "";
        var lastName = user.FindFirst("lastName")?.Value ?? "";
        
        if (!string.IsNullOrEmpty(firstName) || !string.IsNullOrEmpty(lastName))
        {
            return $"{firstName} {lastName}".Trim();
        }
        
        return user.FindFirst("email")?.Value ?? "Unknown User";
    }

    private string GetUserRole(ClaimsPrincipal user)
    {
        return user.FindFirst("role")?.Value ?? "User";
    }
}