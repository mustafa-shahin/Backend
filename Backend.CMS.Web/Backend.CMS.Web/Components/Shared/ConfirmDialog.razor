@using Backend.CMS.Web.Services
@inject IDialogService DialogService

<div class="text-center sm:text-left">
    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 dark:bg-red-900 sm:mx-0 sm:h-10 sm:w-10 mb-4">
        <i class="fas fa-exclamation-triangle text-red-600 dark:text-red-400"></i>
    </div>

    <div class="mt-3 sm:mt-0 sm:ml-4">
        <p class="text-sm text-gray-500 dark:text-gray-400">
            @Message
        </p>
    </div>
</div>

<div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse gap-3">
    <button @onclick="HandleConfirm"
            type="button"
            disabled="@isLoading"
            class="w-full inline-flex justify-center rounded-lg border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
        @if (isLoading)
        {
            <i class="fas fa-spinner fa-spin mr-2"></i>
        }
        else
        {
            <i class="fas fa-exclamation-triangle mr-2"></i>
        }
        @ConfirmText
    </button>

    <button @onclick="HandleCancel"
            type="button"
            disabled="@isLoading"
            class="mt-3 w-full inline-flex justify-center rounded-lg border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:w-auto sm:text-sm disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
        <i class="fas fa-times mr-2"></i>
        @CancelText
    </button>
</div>

@code {
    [Parameter] public string DialogId { get; set; } = string.Empty;
    [Parameter] public string Message { get; set; } = "Are you sure you want to continue?";
    [Parameter] public string ConfirmText { get; set; } = "Confirm";
    [Parameter] public string CancelText { get; set; } = "Cancel";

    private bool isLoading = false;

    private async Task HandleConfirm()
    {
        if (isLoading) return;

        isLoading = true;
        StateHasChanged();

        // Small delay to show loading state
        await Task.Delay(200);

        await DialogService.CloseAsync(DialogId, true);
    }

    private async Task HandleCancel()
    {
        if (isLoading) return;
        await DialogService.CloseAsync(DialogId, false);
    }
}