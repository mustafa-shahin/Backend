@page "/products"
@using Backend.CMS.Application.DTOs
@using Backend.CMS.Domain.Enums
@using Frontend.Components.Common.GenericCrudPage
@using Frontend.Interfaces
@using Frontend.Components.Common
@using Frontend.Forms.Products
@inject IProductService ProductService
@inject INotificationService NotificationService

<GenericCrudPage TListItem="ProductListDto" 
                 TDetailItem="ProductDto" 
                 TCreateDto="CreateProductDto" 
                 TUpdateDto="UpdateProductDto"
                 PageTitle="Products Management"
                 EntitySingularName="Product"
                 EntityPluralName="Products"
                 PageDescription="Manage your product catalog, variants, and inventory"
                 HeaderIcon="fas fa-box"
                 DialogSize="xlarge"
                 ShowDuplicateAction="true"
                 ShowViewModeToggle="true"
                 EmptyStateIcon="fas fa-box-open"
                 EmptyStateTitle="No products found"
                 EmptyStateMessage="Create your first product to get started with your catalog"
                 IdSelector="@(item => item.Id)"
                 CreateModelFactory="@CreateNewProduct"
                 EditModelFactory="@ConvertToCreateDto"
                 LoadDataFunc="@LoadProducts"
                 GetByIdFunc="@ProductService.GetProductByIdAsync"
                 CreateFunc="@ProductService.CreateProductAsync"
                 UpdateFunc="@ProductService.UpdateProductAsync"
                 DeleteFunc="@ProductService.DeleteProductAsync"
                 DuplicateFunc="@ProductService.DuplicateProductAsync"
                 CreateToUpdateMapper="@MapCreateToUpdate"
                 ValidateFunc="@ValidateProduct"
                 OnEntityCreated="@OnProductCreated"
                 OnEntityUpdated="@OnProductUpdated"
                 OnEntityDeleted="@OnProductDeleted">

    <TableColumns>
        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Product</th>
        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Type</th>
        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Categories</th>
        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Variants</th>
        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Updated</th>
    </TableColumns>

    <RowTemplate Context="product">
        <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
                <div class="flex-shrink-0 h-12 w-12">
                    @if (!string.IsNullOrEmpty(product.FeaturedImageUrl))
                    {
                        <img class="h-12 w-12 rounded-lg object-cover border border-gray-200 dark:border-gray-600" 
                             src="@product.FeaturedImageUrl" 
                             alt="@product.Name" />
                    }
                    else
                    {
                        <div class="h-12 w-12 rounded-lg bg-gray-100 dark:bg-gray-700 flex items-center justify-center border border-gray-200 dark:border-gray-600">
                            <i class="fas fa-box text-gray-400 text-lg"></i>
                        </div>
                    }
                </div>
                <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900 dark:text-white">@product.Name</div>
                    <div class="text-sm text-gray-500 dark:text-gray-400">ID: @product.Id</div>
                </div>
            </div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @GetTypeClass(product.Type)">
                <i class="@GetTypeIcon(product.Type) mr-1"></i>
                @product.Type.ToString()
            </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @GetStatusClass(product.Status)">
                <i class="@GetStatusIcon(product.Status) mr-1"></i>
                @product.StatusName
            </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-900 dark:text-white">
                @if (product.CategoryNames.Any())
                {
                    <div class="flex flex-wrap gap-1">
                        @foreach (var category in product.CategoryNames.Take(2))
                        {
                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400">
                                @category
                            </span>
                        }
                        @if (product.CategoryNames.Count > 2)
                        {
                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-400">
                                +@(product.CategoryNames.Count - 2) more
                            </span>
                        }
                    </div>
                }
                else
                {
                    <span class="text-gray-500 dark:text-gray-400">No categories</span>
                }
            </div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-900 dark:text-white">
                @if (product.HasVariants)
                {
                    <span class="inline-flex items-center text-green-600 dark:text-green-400">
                        <i class="fas fa-check-circle mr-1"></i>
                        Has variants
                    </span>
                }
                else
                {
                    <span class="text-gray-500 dark:text-gray-400">Single variant</span>
                }
            </div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
            @product.UpdatedAt.ToString("MMM dd, yyyy")
        </td>
    </RowTemplate>

    <FormContent Context="formContext">
        <ProductForm Model="@((CreateProductDto)formContext.Model)"
                     ValidationErrors="@formContext.ValidationErrors"
                     IsEditMode="@formContext.IsEditMode"
                     IsSaving="@formContext.IsSaving" />
    </FormContent>

    <FilterContent>
        <div class="flex items-center space-x-3">
            <select @bind="statusFilter" class="border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">All Status</option>
                <option value="@((int)ProductStatus.Draft)">Draft</option>
                <option value="@((int)ProductStatus.Active)">Active</option>
                <option value="@((int)ProductStatus.Archived)">Archived</option>
            </select>

            <select @bind="typeFilter" class="border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">All Types</option>
                <option value="@((int)ProductType.Physical)">Physical</option>
                <option value="@((int)ProductType.Digital)">Digital</option>
                <option value="@((int)ProductType.Service)">Service</option>
                <option value="@((int)ProductType.GiftCard)">Gift Card</option>
            </select>

            <select @bind="variantsFilter" class="border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">All Products</option>
                <option value="true">With Variants</option>
                <option value="false">Single Variant</option>
            </select>
        </div>
    </FilterContent>

</GenericCrudPage>

