@*Frontend/Forms/Categories/CategoryForm.razor*@
@using Backend.CMS.Application.DTOs
@using Frontend.Components.Common.ConfirmationDialogComponent
@using Frontend.Components.Common.ImagePicker
@using Frontend.Components.Files.FileBrowser
@using Frontend.Interfaces
@using System.Text
@inject ICategoryService CategoryService
@inject IFileService FileService
@inject IStyleService StyleService
@inject INotificationService NotificationService

<div class="space-y-6">
    <!-- Basic Information -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center mb-4">
            <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center mr-3">
                <i class="fas fa-info-circle text-white text-sm"></i>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Basic Information</h3>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Name -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Category Name *
                </label>
                <input @bind="Model.Name" @oninput="OnNameChanged"
                       type="text"
                       placeholder="Enter category name"
                       class="@StyleService.GetFormInputClass(addtionalClasses: GetValidationClass("Name"))" />
                @if (ValidationErrors.ContainsKey("Name"))
                {
                    <p class="text-red-600 dark:text-red-400 text-sm mt-1">
                        <i class="fas fa-exclamation-triangle mr-1"></i>
                        @ValidationErrors["Name"]
                    </p>
                }
            </div>

            <!-- Slug -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    URL Slug *
                </label>
                <div class="relative">
                    <input @bind="Model.Slug" @oninput="OnSlugChanged"
                           type="text"
                           placeholder="category-slug"
                           class="@StyleService.GetFormInputClass(addtionalClasses: GetValidationClass("Slug"))" />
                    @if (isValidatingSlug)
                    {
                        <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                            <div class="animate-spin rounded-full h-4 w-4 border-2 border-blue-600 border-t-transparent"></div>
                        </div>
                    }
                    else if (slugValidationResult.HasValue)
                    {
                        <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                            @if (slugValidationResult.Value)
                            {
                                <i class="fas fa-check-circle text-green-500"></i>
                            }
                            else
                            {
                                <i class="fas fa-times-circle text-red-500"></i>
                            }
                        </div>
                    }
                </div>
                @if (ValidationErrors.ContainsKey("Slug"))
                {
                    <p class="text-red-600 dark:text-red-400 text-sm mt-1">
                        <i class="fas fa-exclamation-triangle mr-1"></i>
                        @ValidationErrors["Slug"]
                    </p>
                }
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    Used in URLs. Only lowercase letters, numbers, and hyphens allowed.
                </p>
            </div>
        </div>

        <div class="grid grid-cols-1 gap-6 mt-6">
            <!-- Short Description -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Short Description
                </label>
                <input @bind="Model.ShortDescription"
                       type="text"
                       placeholder="Brief description for listings"
                       maxlength="500"
                       class="@StyleService.GetFormInputClass()" />
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    @(Model.ShortDescription?.Length ?? 0)/500 characters. Used in category listings.
                </p>
            </div>

            <!-- Description -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Description
                </label>
                <textarea @bind="Model.Description"
                          rows="4"
                          placeholder="Detailed category description"
                          maxlength="1000"
                          class="@StyleService.GetFormTextareaClass()"></textarea>
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    @(Model.Description?.Length ?? 0)/1000 characters. Detailed description for category pages.
                </p>
            </div>
        </div>
    </div>

    <!-- Hierarchy -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center mb-4">
            <div class="w-8 h-8 bg-purple-600 rounded-lg flex items-center justify-center mr-3">
                <i class="fas fa-sitemap text-white text-sm"></i>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Category Hierarchy</h3>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Parent Category -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Parent Category
                </label>
                <select @bind="Model.ParentCategoryId" class="@StyleService.GetFormSelectClass()">
                    <option value="">-- Root Category --</option>
                    @if (parentCategories != null)
                    {
                        @foreach (var category in parentCategories)
                        {
                            <option value="@category.Id">@GetCategoryDisplayName(category)</option>
                        }
                    }
                </select>
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    Select a parent category to create a sub-category, or leave empty for a root category.
                </p>
            </div>

            <!-- Sort Order -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Sort Order
                </label>
                <input @bind="Model.SortOrder"
                       type="number"
                       min="0"
                       max="9999"
                       placeholder="0"
                       class="@StyleService.GetFormInputClass()" />
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    Lower numbers appear first. Use 0 for default ordering.
                </p>
            </div>
        </div>
    </div>

    <!-- Images -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center justify-between mb-4">
            <div class="flex items-center">
                <div class="w-8 h-8 bg-green-600 rounded-lg flex items-center justify-center mr-3">
                    <i class="fas fa-images text-white text-sm"></i>
                </div>
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Category Images</h3>
            </div>
            <button type="button" 
                    class="@StyleService.GetButtonClass("primary", "small")" 
                    @onclick="OpenFileBrowser"
                    disabled="@isProcessingImages">
                <i class="fas @(isProcessingImages ? "fa-spinner fa-spin" : "fa-plus") mr-1"></i>
                @(isProcessingImages ? "Processing..." : "Add Images")
            </button>
        </div>

        @if (isLoadingImages)
        {
            <div class="flex items-center justify-center py-8">
                <div class="text-center">
                    <div class="animate-spin rounded-full h-8 w-8 border-2 border-blue-600 border-t-transparent mx-auto mb-2"></div>
                    <p class="text-gray-500 dark:text-gray-400 text-sm">Loading images...</p>
                </div>
            </div>
        }
        else if (categoryImages.Any())
        {
            <div class="space-y-4">
                <!-- Images Grid -->
                <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                    @foreach (var image in categoryImages.OrderBy(i => i.Position))
                    {
                        <div class="relative group border-2 @(image.IsFeatured ? "border-yellow-400" : "border-gray-200 dark:border-gray-700") rounded-lg overflow-hidden bg-white dark:bg-gray-800 shadow-sm">
                            <!-- Image -->
                            <div class="aspect-square relative">
                                <img src="@image.ImageUrl" 
                                     alt="@(image.Alt ?? "Category image")" 
                                     class="w-full h-full object-cover" 
                                     onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                                <!-- Fallback for failed image load -->
                                <div class="w-full h-full bg-gray-100 dark:bg-gray-700 flex items-center justify-center" style="display: none;">
                                    <i class="fas fa-image text-gray-400 text-2xl"></i>
                                </div>

                                <!-- Featured Badge -->
                                @if (image.IsFeatured)
                                {
                                    <div class="absolute top-2 left-2">
                                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
                                            <i class="fas fa-star mr-1"></i>
                                            Featured
                                        </span>
                                    </div>
                                }

                                <!-- Position Badge -->
                                <div class="absolute top-2 right-2">
                                    <span class="inline-flex items-center justify-center w-6 h-6 rounded-full text-xs font-medium bg-gray-900 bg-opacity-75 text-white">
                                        @(image.Position + 1)
                                    </span>
                                </div>

                                <!-- Overlay Actions -->
                                <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-40 transition-all duration-200 flex items-center justify-center opacity-0 group-hover:opacity-100">
                                    <div class="flex space-x-2">
                                        <button type="button" 
                                                class="p-2 bg-white text-gray-700 rounded-full hover:bg-gray-100 transition-colors shadow-lg"
                                                @onclick="() => EditImage(image)"
                                                title="Edit image">
                                            <i class="fas fa-edit text-sm"></i>
                                        </button>
                                        <button type="button" 
                                                class="p-2 bg-yellow-500 text-white rounded-full hover:bg-yellow-600 transition-colors shadow-lg"
                                                @onclick="() => ToggleFeatured(image)"
                                                title="@(image.IsFeatured ? "Remove featured" : "Set as featured")">
                                            <i class="fas fa-star text-sm"></i>
                                        </button>
                                        <button type="button" 
                                                class="p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors shadow-lg"
                                                @onclick="() => ShowDeleteImageConfirmation(image)"
                                                title="Delete image">
                                            <i class="fas fa-trash text-sm"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Image Info -->
                            <div class="p-3 space-y-1">
                                <p class="text-sm font-medium text-gray-900 dark:text-white truncate" title="@(image.Alt ?? "No alt text")">
                                    @(image.Alt ?? "No alt text")
                                </p>
                                @if (!string.IsNullOrEmpty(image.Caption))
                                {
                                    <p class="text-xs text-gray-500 dark:text-gray-400 truncate" title="@image.Caption">
                                        @image.Caption
                                    </p>
                                }
                            </div>
                        </div>
                    }
                </div>

                <!-- Reorder Controls -->
                @if (categoryImages.Count > 1)
                {
                    <div class="flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700">
                        <p class="text-sm text-gray-600 dark:text-gray-400">
                            <i class="fas fa-info-circle mr-1"></i>
                            Drag and drop to reorder images (feature coming soon)
                        </p>
                        <button type="button" 
                                class="@StyleService.GetButtonClass("secondary", "small")"
                                @onclick="AutoArrangeImages"
                                title="Auto-arrange by position">
                            <i class="fas fa-sort mr-1"></i>
                            Auto-arrange
                        </button>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-8">
                <div class="w-16 h-16 mx-auto bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mb-4">
                    <i class="fas fa-images text-2xl text-gray-400"></i>
                </div>
                <h4 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No images yet</h4>
                <p class="text-gray-500 dark:text-gray-400 mb-4">Add images to make your category more attractive</p>
                <button type="button" 
                        class="@StyleService.GetButtonClass("primary")" 
                        @onclick="OpenFileBrowser">
                    <i class="fas fa-plus mr-2"></i>
                    Add First Image
                </button>
            </div>
        }
    </div>

    <!-- Status & Visibility -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center mb-4">
            <div class="w-8 h-8 bg-yellow-600 rounded-lg flex items-center justify-center mr-3">
                <i class="fas fa-toggle-on text-white text-sm"></i>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Status & Visibility</h3>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Active Status -->
            <div class="space-y-3">
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" @bind="Model.IsActive" class="@StyleService.GetFormCheckboxClass()" />
                    <span class="ml-3 text-sm font-medium text-gray-700 dark:text-gray-300">
                        Active Category
                    </span>
                </label>
                <p class="text-gray-500 dark:text-gray-400 text-xs">
                    Inactive categories won't appear in product assignment or navigation.
                </p>
            </div>

            <!-- Visibility -->
            <div class="space-y-3">
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" @bind="Model.IsVisible" class="@StyleService.GetFormCheckboxClass()" />
                    <span class="ml-3 text-sm font-medium text-gray-700 dark:text-gray-300">
                        Visible to Customers
                    </span>
                </label>
                <p class="text-gray-500 dark:text-gray-400 text-xs">
                    Hidden categories are only visible in the admin panel.
                </p>
            </div>
        </div>
    </div>

    <!-- SEO Information -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
        <div class="flex items-center mb-4">
            <div class="w-8 h-8 bg-indigo-600 rounded-lg flex items-center justify-center mr-3">
                <i class="fas fa-search text-white text-sm"></i>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">SEO Information</h3>
        </div>

        <div class="space-y-6">
            <!-- Meta Title -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Meta Title
                </label>
                <input @bind="Model.MetaTitle"
                       type="text"
                       placeholder="SEO-optimized title for search engines"
                       maxlength="255"
                       class="@StyleService.GetFormInputClass()" />
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    @(Model.MetaTitle?.Length ?? 0)/255 characters. Leave empty to use category name.
                </p>
            </div>

            <!-- Meta Description -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Meta Description
                </label>
                <textarea @bind="Model.MetaDescription"
                          rows="3"
                          placeholder="Brief description for search engine results"
                          maxlength="500"
                          class="@StyleService.GetFormTextareaClass()"></textarea>
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    @(Model.MetaDescription?.Length ?? 0)/500 characters. Appears in search engine results.
                </p>
            </div>

            <!-- Meta Keywords -->
            <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Meta Keywords
                </label>
                <input @bind="Model.MetaKeywords"
                       type="text"
                       placeholder="keyword1, keyword2, keyword3"
                       maxlength="500"
                       class="@StyleService.GetFormInputClass()" />
                <p class="text-gray-500 dark:text-gray-400 text-xs mt-1">
                    @(Model.MetaKeywords?.Length ?? 0)/500 characters. Comma-separated keywords for SEO.
                </p>
            </div>
        </div>
    </div>
</div>

<!-- File Browser Dialog -->
<FormDialog @ref="fileBrowserDialog"
            Title="Select Images"
            Description="Choose images to add to your category"
            HeaderIcon="fas fa-images"
            IsVisible="@showFileBrowserDialog"
            OnClose="@CloseFileBrowser"
            OnSave="@AddSelectedFiles"
            SaveText="Add Selected Images"
            SaveIcon="fas fa-plus"
            Size="xlarge">
    <BodyContent>
        <FileBrowser AllowMultiSelect="true"
                     FileTypes="new[] { Backend.CMS.Domain.Enums.FileType.Image }"
                     ShowUpload="true"
                     OnFilesSelected="OnFileBrowserSelectionChanged" />
    </BodyContent>
</FormDialog>

<!-- Image Edit Dialog -->
<FormDialog @ref="imageEditDialog"
            Title="@($"Edit Image")"
            Description="Update image properties and settings"
            HeaderIcon="fas fa-edit"
            IsVisible="@showImageEditDialog"
            IsSaving="@isSavingImageEdit"
            OnClose="@CloseImageEditDialog"
            OnSave="@SaveImageChanges"
            SaveText="Save Changes"
            SaveIcon="fas fa-save"
            Size="large">
    <BodyContent>
        @if (editingImage != null)
        {
            <div class="space-y-6">
                <!-- Image Preview -->
                <div class="flex items-start space-x-4">
                    <div class="flex-shrink-0">
                        <img src="@GetImageUrl(editingImage)" 
                             alt="@(editingImage.Alt ?? "Preview")" 
                             class="w-24 h-24 object-cover rounded-lg border border-gray-200 dark:border-gray-700" />
                    </div>
                    <div class="flex-1 min-w-0">
                        <h4 class="text-lg font-medium text-gray-900 dark:text-white">Image Properties</h4>
                        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">
                            Configure how this image appears in your category
                        </p>
                    </div>
                </div>

                <!-- Image Properties Form -->
                <div class="space-y-4">
                    <!-- Alt Text -->
                    <div class="space-y-2">
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                            Alt Text (Accessibility) *
                        </label>
                        <input @bind="editingImageAlt"
                               type="text"
                               placeholder="Describe this image for accessibility"
                               class="@StyleService.GetFormInputClass()"
                               maxlength="255" />
                        <p class="text-xs text-gray-500 dark:text-gray-400">
                            @(editingImageAlt?.Length ?? 0)/255 characters. Important for SEO and accessibility.
                        </p>
                    </div>

                    <!-- Caption -->
                    <div class="space-y-2">
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                            Caption
                        </label>
                        <input @bind="editingImageCaption"
                               type="text"
                               placeholder="Optional caption for the image"
                               class="@StyleService.GetFormInputClass()"
                               maxlength="500" />
                        <p class="text-xs text-gray-500 dark:text-gray-400">
                            @(editingImageCaption?.Length ?? 0)/500 characters. Displayed below the image if shown.
                        </p>
                    </div>

                    <!-- Position -->
                    <div class="space-y-2">
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                            Display Position
                        </label>
                        <input @bind="editingImagePosition"
                               type="number"
                               min="0"
                               max="999"
                               class="@StyleService.GetFormInputClass()" />
                        <p class="text-xs text-gray-500 dark:text-gray-400">
                            Lower numbers appear first. Use 0 for automatic ordering.
                        </p>
                    </div>

                    <!-- Featured Status -->
                    <div class="space-y-2">
                        <label class="flex items-center cursor-pointer">
                            <input type="checkbox" 
                                   @bind="editingImageIsFeatured" 
                                   class="@StyleService.GetFormCheckboxClass()" />
                            <span class="ml-3 text-sm font-medium text-gray-700 dark:text-gray-300">
                                Featured Image
                            </span>
                        </label>
                        <p class="text-xs text-gray-500 dark:text-gray-400">
                            Featured images are highlighted and may be used as the main category image.
                        </p>
                    </div>
                </div>
            </div>
        }
    </BodyContent>
</FormDialog>

<!-- Delete Confirmation Dialog -->
<ConfirmationDialog @ref="deleteImageDialog"
                    Title="Delete Image"
                    Message="@($"Are you sure you want to remove this image from the category? This action cannot be undone.")"
                    ConfirmText="Delete Image"
                    ConfirmClass="@StyleService.GetButtonClass("danger")"
                    ConfirmIcon="fas fa-trash"
                    Type="danger"
                    OnConfirm="@DeleteSelectedImage" />