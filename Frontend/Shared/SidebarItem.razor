@inject NavigationManager Navigation

@if (IsDisabled)
{
    <div class="@GetItemClass() opacity-50 cursor-not-allowed" title="@GetTooltip()">
        <i class="@Icon @GetIconClass()"></i>
        @if (!IsCollapsed)
        {
            <span class="ml-3 text-sm font-medium">@Text</span>
            <span class="ml-auto text-xs text-gray-400">(Soon)</span>
        }
    </div>
}
else
{
    <a href="@Href" class="@GetItemClass()" title="@GetTooltip()">
        <i class="@Icon @GetIconClass()"></i>
        @if (!IsCollapsed)
        {
            <span class="ml-3 text-sm font-medium">@Text</span>
        }
    </a>
}

@code {
    [Parameter] public string Icon { get; set; } = string.Empty;
    [Parameter] public string Text { get; set; } = string.Empty;
    [Parameter] public string Href { get; set; } = string.Empty;
    [Parameter] public bool IsCollapsed { get; set; }
    [Parameter] public bool IsDisabled { get; set; }

    private bool IsActive =>
        Navigation.Uri.EndsWith(Href) ||
        (Href == "/" && Navigation.Uri.EndsWith("/"));

    private string GetItemClass()
    {
        var baseClass = "flex items-center px-3 py-2 rounded-lg transition-colors duration-200";
        var stateClass = IsActive
            ? "bg-primary-100 text-primary-700 dark:bg-primary-900 dark:text-primary-300"
            : "text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700";

        return $"{baseClass} {stateClass}";
    }

    private string GetIconClass()
    {
        return IsCollapsed ? "text-lg" : "text-base";
    }

    private string GetTooltip()
    {
        return IsCollapsed ? Text : string.Empty;
    }
}