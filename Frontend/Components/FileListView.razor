@using Backend.CMS.Application.DTOs
@using Backend.CMS.Domain.Enums
@using Frontend.Interfaces
@inject IStyleService StyleService

<div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4">
    @foreach (var folder in Folders)
    {
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow hover:shadow-lg transition-all duration-200 overflow-hidden group cursor-pointer" @ondblclick="() => OnFolderClick.InvokeAsync(folder.Id)">
            <div class="p-4">
                <div class="flex items-center justify-between mb-3">
                    <div class="flex items-center flex-1 cursor-pointer" @onclick="() => OnFolderClick.InvokeAsync(folder.Id)">
                        <!-- Folder Icon -->
                        <div class="flex-shrink-0 mr-3">
                            @if (folder.FolderType == FolderType.Images)
                            {
                                <i class="fas fa-images text-green-600 dark:text-green-400 text-3xl"></i>
                            }
                            else if (folder.FolderType == FolderType.Documents)
                            {
                                <i class="fas fa-file-alt text-red-600 dark:text-red-400 text-3xl"></i>
                            }
                            else if (folder.FolderType == FolderType.Videos)
                            {
                                <i class="fas fa-video text-blue-600 dark:text-blue-400 text-3xl"></i>
                            }
                            else if (folder.FolderType == FolderType.Audio)
                            {
                                <i class="fas fa-music text-purple-600 dark:text-purple-400 text-3xl"></i>
                            }
                            else if (folder.FolderType == FolderType.UserAvatars)
                            {
                                <i class="fas fa-user-circle text-indigo-600 dark:text-indigo-400 text-3xl"></i>
                            }
                            else if (folder.FolderType == FolderType.CompanyAssets)
                            {
                                <i class="fas fa-building text-gray-600 dark:text-gray-400 text-3xl"></i>
                            }
                            else if (folder.FolderType == FolderType.Temporary)
                            {
                                <i class="fas fa-clock text-orange-600 dark:text-orange-400 text-3xl"></i>
                            }
                            else
                            {
                                <i class="fas fa-folder text-blue-600 dark:text-blue-400 text-3xl"></i>
                            }
                        </div>

                        <!-- Folder Info -->
                        <div class="flex-1 min-w-0">
                            <h4 class="text-sm font-medium text-gray-900 dark:text-white truncate mb-1"
                                title="@folder.Name">
                                @folder.Name
                            </h4>
                            <p class="text-xs text-gray-500 dark:text-gray-400">
                                @folder.FileCount file@(folder.FileCount == 1 ? "" : "s")
                                @if (folder.SubFolderCount > 0)
                                {
                                    <span>, @folder.SubFolderCount folder@(folder.SubFolderCount == 1 ? "" : "s")</span>
                                }
                            </p>
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="flex items-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity">
                        <div class="relative">
                            <button @onclick="() => ToggleFolderActions(folder.Id)"
                                    @onclick:stopPropagation="true"
                                    class="@StyleService.GetTableActionButtonClass() p-1"
                                    title="More actions">
                                <i class="fas fa-ellipsis-v text-sm"></i>
                            </button>

                            @if (showFolderActions == folder.Id)
                            {
                                <div class="absolute right-0 z-10 mt-1 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg border border-gray-200 dark:border-gray-700">
                                    <div class="py-1">
                                        <button @onclick="() => EditFolder(folder)"
                                                @onclick:stopPropagation="true"
                                                class="flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">
                                            <i class="fas fa-edit mr-2"></i>
                                            Edit
                                        </button>
                                        <button @onclick="() => RenameFolder(folder)"
                                                @onclick:stopPropagation="true"
                                                class="flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">
                                            <i class="fas fa-i-cursor mr-2"></i>
                                            Rename
                                        </button>
                                        <button @onclick="() => CopyFolderPath(folder)"
                                                @onclick:stopPropagation="true"
                                                class="flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">
                                            <i class="fas fa-link mr-2"></i>
                                            Copy Path
                                        </button>
                                        <div class="border-t border-gray-200 dark:border-gray-600 my-1"></div>
                                        <button @onclick="() => OnDeleteFolder.InvokeAsync(folder)"
                                                @onclick:stopPropagation="true"
                                                class="flex items-center w-full px-4 py-2 text-sm text-red-700 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20">
                                            <i class="fas fa-trash mr-2"></i>
                                            Delete
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Folder Description -->
                @if (!string.IsNullOrEmpty(folder.Description))
                {
                    <p class="text-xs text-gray-600 dark:text-gray-400 line-clamp-2 mb-3"
                       title="@folder.Description">
                        @folder.Description
                    </p>
                }

                <!-- Folder Type Badge -->
                <div class="flex items-center justify-between">
                    <span class="inline-flex items-center px-2 py-1 text-xs font-medium rounded-full @StyleService.GetFolderTypeBadgeClass(folder.FolderType)">
                        @StyleService.GetFolderTypeText(folder.FolderType)
                    </span>

                    <!-- Visibility -->
                    @if (folder.IsPublic)
                    {
                        <span class="inline-flex items-center p-1 rounded-full bg-green-100/90 dark:bg-green-900/90 text-green-600 dark:text-green-400" title="Public">
                            <i class="fas fa-globe text-xs"></i>
                        </span>
                    }
                    else
                    {
                        <span class="inline-flex items-center p-1 rounded-full bg-gray-100/90 dark:bg-gray-700/90 text-gray-600 dark:text-gray-400" title="Private">
                            <i class="fas fa-lock text-xs"></i>
                        </span>
                    }
                </div>

                <!-- Folder Stats -->
                <div class="mt-3 pt-3 border-t border-gray-200 dark:border-gray-700">
                    <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                        <span>
                            <i class="fas fa-calendar mr-1"></i>
                            @folder.UpdatedAt.ToString("MMM dd")
                        </span>
                        @if (!string.IsNullOrEmpty(folder.TotalSizeFormatted))
                        {
                            <span>
                                <i class="fas fa-hdd mr-1"></i>
                                @folder.TotalSizeFormatted
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public IEnumerable<FolderDto> Folders { get; set; } = new List<FolderDto>();
    [Parameter] public EventCallback<int> OnFolderClick { get; set; }
    [Parameter] public EventCallback<FolderDto> OnDeleteFolder { get; set; }

    private int showFolderActions = -1;





    private void ToggleFolderActions(int folderId)
    {
        showFolderActions = showFolderActions == folderId ? -1 : folderId;
        StateHasChanged();
    }

    private void EditFolder(FolderDto folder)
    {
        // TODO: Implement edit folder functionality
        showFolderActions = -1;
        StateHasChanged();
    }

    private void RenameFolder(FolderDto folder)
    {
        // TODO: Implement rename folder functionality
        showFolderActions = -1;
        StateHasChanged();
    }

    private async Task CopyFolderPath(FolderDto folder)
    {
        // TODO: Implement copy folder path functionality
        showFolderActions = -1;
        StateHasChanged();
    }
}