@using Backend.CMS.Application.DTOs
@using Backend.CMS.Domain.Enums
@using Frontend.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Primitives
@inject IFileService FileService
@inject IStyleService StyleService
@inject INotificationService NotificationService

<div class="space-y-4">
    <!-- Search and Filters -->
    <div class="flex flex-col sm:flex-row gap-4">
        <div class="flex-1">
            <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-search text-gray-400"></i>
                </div>
                <input @bind="searchTerm" @bind:event="oninput" @onkeyup="OnSearchKeyUp"
                       type="text"
                       placeholder="Search files..."
                       class="@StyleService.GetFormInputClass() pl-10" />
            </div>
        </div>

        @if (ShowUpload)
        {
            <button @onclick="ShowUploadDialog" class="@StyleService.GetButtonClass("primary")">
                <i class="fas fa-upload mr-2"></i>
                Upload Files
            </button>
        }
    </div>

    <!-- Files Grid -->
    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700">
        @if (isLoading)
        {
            <div class="p-8 text-center">
                <div class="@StyleService.GetLoadingSpinnerClass("large") mx-auto mb-4"></div>
                <p class="text-gray-500 dark:text-gray-400">Loading files...</p>
            </div>
        }
        else if (files.Any())
        {
            <div class="p-4">
                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4">
                    @foreach (var file in files)
                    {
                        var isSelected = selectedFiles.Contains(file);
                        <div class="relative group cursor-pointer"
                             @onclick="() => ToggleFileSelection(file)">
                            <div class="@GetFileCardClass(isSelected)">
                                <!-- File Preview -->
                                <div class="aspect-square bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden mb-2">
                                    @if (file.FileType == FileType.Image)
                                    {
                                        <img src="@GetFilePreviewUrl(file)"
                                             alt="@file.OriginalFileName"
                                             class="w-full h-full object-cover"
                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                                        <div class="w-full h-full flex items-center justify-center" style="display: none;">
                                            <i class="fas fa-image text-gray-400 text-2xl"></i>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="w-full h-full flex items-center justify-center">
                                            <i class="@StyleService.GetFileIcon(file.ContentType) text-3xl @StyleService.GetFileIconColor(file.FileType)"></i>
                                        </div>
                                    }
                                </div>

                                <!-- File Info -->
                                <div class="text-center">
                                    <p class="text-xs font-medium text-gray-900 dark:text-white truncate" title="@file.OriginalFileName">
                                        @file.OriginalFileName
                                    </p>
                                    <p class="text-xs text-gray-500 dark:text-gray-400">
                                        @FileService.FormatFileSize(file.FileSize)
                                    </p>
                                </div>

                                <!-- Selection Indicator -->
                                @if (isSelected)
                                {
                                    <div class="absolute top-2 right-2">
                                        <div class="w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center">
                                            <i class="fas fa-check text-white text-xs"></i>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <div class="border-t border-gray-200 dark:border-gray-700 p-4">
                    <div class="flex items-center justify-between">
                        <div class="text-sm text-gray-700 dark:text-gray-300">
                            Showing @((currentPage - 1) * pageSize + 1) to @Math.Min(currentPage * pageSize, totalCount) of @totalCount files
                        </div>
                        <div class="flex space-x-2">
                            <button @onclick="() => GoToPage(currentPage - 1)"
                                    disabled="@(currentPage <= 1)"
                                    class="@StyleService.GetButtonClass("secondary", "small")">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <span class="text-sm text-gray-700 dark:text-gray-300 px-3 py-1">
                                Page @currentPage of @totalPages
                            </span>
                            <button @onclick="() => GoToPage(currentPage + 1)"
                                    disabled="@(currentPage >= totalPages)"
                                    class="@StyleService.GetButtonClass("secondary", "small")">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="p-8 text-center">
                <i class="fas fa-folder-open text-gray-400 text-4xl mb-4"></i>
                <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No files found</h3>
                <p class="text-gray-500 dark:text-gray-400 mb-4">No files match your search criteria.</p>
                @if (ShowUpload)
                {
                    <button @onclick="ShowUploadDialog" class="@StyleService.GetButtonClass("primary")">
                        <i class="fas fa-upload mr-2"></i>
                        Upload First File
                    </button>
                }
            </div>
        }
    </div>

    <!-- Selected Files Summary -->
    @if (selectedFiles.Any())
    {
        <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <i class="fas fa-check-circle text-blue-600 dark:text-blue-400 mr-2"></i>
                    <span class="text-sm font-medium text-blue-900 dark:text-blue-100">
                        @selectedFiles.Count file@(selectedFiles.Count == 1 ? "" : "s") selected
                    </span>
                </div>
                <button @onclick="ClearSelection" class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-200 text-sm">
                    Clear Selection
                </button>
            </div>
        </div>
    }
</div>

<!-- Upload Dialog -->
@if (ShowUpload)
{
    <FormDialog @ref="uploadDialog"
                Title="Upload Files"
                Description="Select and upload files to your media library"
                HeaderIcon="fas fa-upload"
                IsVisible="@showUploadDialog"
                IsSaving="@isUploading"
                Size="large"
                SaveText="Upload Files"
                SaveIcon="fas fa-upload"
                ZIndex="1200"
                OnClose="@CloseUploadDialog"
                OnSave="@UploadFiles">
        <BodyContent>
            <FileUpload Files="@selectedUploadFiles"
                        FilesChanged="@OnUploadFilesChanged"
                        UploadProgress="@uploadProgress"
                        UploadProgressChanged="@OnUploadProgressChanged"
                        IsUploading="@isUploading" />
        </BodyContent>
    </FormDialog>
}

@code {
   
}