
@using Backend.CMS.Application.DTOs
@using Backend.CMS.Domain.Enums
@using Frontend.Components.Common.ConfirmationDialogComponent
@using Frontend.Components.Files.FileBrowser
@using Frontend.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Http
@using Microsoft.JSInterop
@inject IFileService FileService
@inject INotificationService NotificationService
@inject IStyleService StyleService
@inject IJSRuntime JSRuntime

<div class="space-y-4">
    <!-- Header -->
    <div class="flex items-center justify-between">
        <div class="flex items-center space-x-2">
            <h4 class="text-md font-semibold text-gray-900 dark:text-white flex items-center">
                <i class="@HeaderIcon text-@IconColor-600 dark:text-@IconColor-400 mr-2"></i>
                @Title
            </h4>
            @if (showFileCount)
            {
                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200">
                    @files.Count @(files.Count == 1 ? "file" : "files")
                </span>
            }
        </div>

        <div class="flex items-center space-x-2">
            @if (ShowUpload && CanUpload)
            {
                <button type="button"
                        class="@StyleService.GetButtonClass("primary", "small")"
                        @onclick="TriggerFileDialog"
                        disabled="@isUploading">
                    <i class="fas @(isUploading ? "fa-spinner fa-spin" : "fa-upload") mr-1"></i>
                    @(isUploading ? "Uploading..." : "Upload")
                </button>
            }

            @if (ShowBrowse && CanBrowse)
            {
                <button type="button"
                        class="@StyleService.GetButtonClass("secondary", "small")"
                        @onclick="OpenFileBrowser"
                        disabled="@isProcessing">
                    <i class="fas fa-folder-open mr-1"></i>
                    Browse
                </button>
            }

            @if (files.Any() && AllowClear)
            {
                <button type="button"
                        class="@StyleService.GetButtonClass("danger", "small")"
                        @onclick="ShowClearConfirmation"
                        disabled="@isProcessing">
                    <i class="fas fa-trash mr-1"></i>
                    Clear All
                </button>
            }
        </div>
    </div>

    <!-- Upload Progress -->
    @if (isUploading && uploadProgress.Any())
    {
        <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
            <div class="flex items-center mb-2">
                <i class="fas fa-upload text-blue-600 dark:text-blue-400 mr-2"></i>
                <span class="text-sm font-medium text-blue-900 dark:text-blue-100">
                    Uploading files...
                </span>
            </div>
            @foreach (var progress in uploadProgress)
            {
                <div class="mb-2">
                    <div class="flex justify-between text-xs text-blue-700 dark:text-blue-300 mb-1">
                        <span class="truncate">@progress.Key</span>
                        <span>@progress.Value%</span>
                    </div>
                    <div class="w-full bg-blue-200 dark:bg-blue-800 rounded-full h-2">
                        <div class="bg-blue-600 h-2 rounded-full transition-all duration-300"
                             style="width: @(progress.Value)%"></div>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Files Display -->
    @if (isLoading)
    {
        <div class="flex items-center justify-center py-8">
            <div class="text-center">
                <div class="animate-spin rounded-full h-8 w-8 border-2 border-blue-600 border-t-transparent mx-auto mb-2"></div>
                <p class="text-gray-500 dark:text-gray-400 text-sm">Loading files...</p>
            </div>
        </div>
    }
    else if (files.Any())
    {
        @if (DisplayMode == FileDisplayMode.Grid)
        {
            <!-- Grid View -->
            <div class="grid @GetGridClasses() gap-4">
                @foreach (var file in files)
                {
                    <div class="relative group @GetFileCardClasses()">
                        <!-- File Preview -->
                        <div class="@GetFilePreviewClasses()">
                            @if (file.IsImage && ShowThumbnails)
                            {
                                <img src="@GetFilePreviewUrl(file)"
                                     alt="@(file.Alt ?? file.OriginalFileName)"
                                     class="w-full h-full object-cover"
                                     onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                                <div class="w-full h-full flex items-center justify-center" style="display: none;">
                                    <i class="fas fa-image text-gray-400 text-2xl"></i>
                                </div>
                            }
                            else
                            {
                                <div class="w-full h-full flex flex-col items-center justify-center p-4">
                                    <i class="@StyleService.GetFileIcon(file.ContentType) text-3xl @StyleService.GetFileIconColor(file.FileType) mb-2"></i>
                                    <span class="text-xs text-gray-600 dark:text-gray-400 text-center truncate w-full">
                                        @file.FileExtension.ToUpper()
                                    </span>
                                </div>
                            }

                            <!-- Overlay Actions -->
                            <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-40 transition-all duration-200 flex items-center justify-center opacity-0 group-hover:opacity-100">
                                <div class="flex space-x-1">
                                    @if (ShowPreview)
                                    {
                                        <button type="button"
                                                class="p-2 bg-white text-gray-700 rounded-full hover:bg-gray-100 transition-colors shadow-lg"
                                                @onclick="() => PreviewFile(file)"
                                                title="Preview">
                                            <i class="fas fa-eye text-sm"></i>
                                        </button>
                                    }

                                    @if (ShowDownload)
                                    {
                                        <button type="button"
                                                class="p-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors shadow-lg"
                                                @onclick="() => DownloadFile(file)"
                                                title="Download">
                                            <i class="fas fa-download text-sm"></i>
                                        </button>
                                    }

                                    @if (AllowRemove)
                                    {
                                        <button type="button"
                                                class="p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors shadow-lg"
                                                @onclick="() => ShowRemoveConfirmation(file)"
                                                title="Remove">
                                            <i class="fas fa-trash text-sm"></i>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- File Info -->
                        <div class="p-3 space-y-1">
                            <p class="text-sm font-medium text-gray-900 dark:text-white truncate"
                               title="@file.OriginalFileName">
                                @file.OriginalFileName
                            </p>
                            <p class="text-xs text-gray-500 dark:text-gray-400">
                                @FileService.FormatFileSize(file.FileSize)
                            </p>
                            @if (ShowFileType)
                            {
                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @GetFileTypeBadgeClass(file.FileType)">
                                    @file.FileType
                                </span>
                            }
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- List View -->
            <div class="space-y-2">
                @foreach (var file in files)
                {
                    <div class="flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors">
                        <div class="flex items-center space-x-3 flex-1 min-w-0">
                            <div class="w-10 h-10 @GetFileIconBackgroundClass(file.FileType) rounded-lg flex items-center justify-center flex-shrink-0">
                                <i class="@StyleService.GetFileIcon(file.ContentType) text-white"></i>
                            </div>
                            <div class="flex-1 min-w-0">
                                <p class="text-sm font-medium text-gray-900 dark:text-white truncate"
                                   title="@file.OriginalFileName">
                                    @file.OriginalFileName
                                </p>
                                <div class="flex items-center space-x-2 text-xs text-gray-500 dark:text-gray-400">
                                    <span>@FileService.FormatFileSize(file.FileSize)</span>
                                    <span>•</span>
                                    <span>@file.FileExtension.ToUpper()</span>
                                    @if (ShowUploadDate)
                                    {
                                        <span>•</span>
                                        <span>@file.CreatedAt.ToString("MMM dd, yyyy")</span>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="flex items-center space-x-2 flex-shrink-0">
                            @if (ShowPreview)
                            {
                                <button type="button"
                                        class="@StyleService.GetTableActionButtonClass("view")"
                                        @onclick="() => PreviewFile(file)"
                                        title="Preview">
                                    <i class="fas fa-eye"></i>
                                </button>
                            }

                            @if (ShowDownload)
                            {
                                <button type="button"
                                        class="@StyleService.GetTableActionButtonClass()"
                                        @onclick="() => DownloadFile(file)"
                                        title="Download">
                                    <i class="fas fa-download"></i>
                                </button>
                            }

                            @if (AllowRemove)
                            {
                                <button type="button"
                                        class="@StyleService.GetTableActionButtonClass("delete")"
                                        @onclick="() => ShowRemoveConfirmation(file)"
                                        title="Remove">
                                    <i class="fas fa-trash"></i>
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    }
    else
    {
        <!-- Empty State -->
        <div class="text-center py-8 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg">
            <div class="w-16 h-16 mx-auto bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mb-4">
                <i class="@HeaderIcon text-2xl text-gray-400"></i>
            </div>
            <h4 class="text-lg font-medium text-gray-900 dark:text-white mb-2">@EmptyStateTitle</h4>
            <p class="text-gray-500 dark:text-gray-400 mb-4">@EmptyStateMessage</p>

            <div class="flex items-center justify-center space-x-3">
                @if (ShowUpload && CanUpload)
                {
                    <button type="button"
                            class="@StyleService.GetButtonClass("primary")"
                            @onclick="TriggerFileDialog">
                        <i class="fas fa-upload mr-2"></i>
                        Upload Files
                    </button>
                }

                @if (ShowBrowse && CanBrowse)
                {
                    <button type="button"
                            class="@StyleService.GetButtonClass("secondary")"
                            @onclick="OpenFileBrowser">
                        <i class="fas fa-folder-open mr-2"></i>
                        Browse Files
                    </button>
                }
            </div>
        </div>
    }
</div>

<!-- Hidden File Input -->
<InputFile @ref="fileInput" OnChange="OnFilesSelected" multiple="@AllowMultiple" accept="@GetAcceptAttribute()" class="hidden" />

<!-- File Browser Dialog -->
<FormDialog @ref="fileBrowserDialog"
            Title="Select Files"
            Description="Choose files from your media library"
            HeaderIcon="fas fa-folder-open"
            IsVisible="@showFileBrowserDialog"
            OnClose="@CloseFileBrowser"
            OnSave="@AddSelectedBrowserFiles"
            SaveText="Add Selected Files"
            SaveIcon="fas fa-plus"
            Size="xlarge">
    <BodyContent>
        <FileBrowser AllowMultiSelect="@AllowMultiple"
                     FileTypes="@(AllowedFileTypes?.ToArray())"
                     ShowUpload="true"
                     OnFilesSelected="OnFileBrowserSelectionChanged" />
    </BodyContent>
</FormDialog>

<!-- Remove Confirmation Dialog -->
<ConfirmationDialog @ref="removeFileDialog"
                    Title="Remove File"
                    Message="@($"Are you sure you want to remove this file? The file will not be deleted from the system, just removed from this {EntityType?.ToLower() ?? "item"}.")"
                    ConfirmText="Remove"
                    ConfirmClass="@StyleService.GetButtonClass("danger")"
                    ConfirmIcon="fas fa-trash"
                    Type="danger"
                    OnConfirm="@RemoveSelectedFile" />

<!-- Clear All Confirmation Dialog -->
<ConfirmationDialog @ref="clearAllDialog"
                    Title="Clear All Files"
                    Message="@($"Are you sure you want to remove all files from this {EntityType?.ToLower() ?? "item"}? The files will not be deleted from the system.")"
                    ConfirmText="Clear All"
                    ConfirmClass="@StyleService.GetButtonClass("danger")"
                    ConfirmIcon="fas fa-trash"
                    Type="danger"
                    OnConfirm="@ClearAllFiles" />

@code {
    // Public API properties
    [Parameter] public string EntityType { get; set; } = string.Empty;
    [Parameter] public int EntityId { get; set; }
    [Parameter] public EventCallback<List<FileDto>> OnFilesChanged { get; set; }

    // Display configuration
    [Parameter] public string Title { get; set; } = "Files";
    [Parameter] public string HeaderIcon { get; set; } = "fas fa-paperclip";
    [Parameter] public string IconColor { get; set; } = "blue";
    [Parameter] public FileDisplayMode DisplayMode { get; set; } = FileDisplayMode.Grid;
    [Parameter] public string GridSize { get; set; } = "medium"; // small, medium, large

    // Feature toggles
    [Parameter] public bool ShowUpload { get; set; } = true;
    [Parameter] public bool ShowBrowse { get; set; } = true;
    [Parameter] public bool ShowPreview { get; set; } = true;
    [Parameter] public bool ShowDownload { get; set; } = true;
    [Parameter] public bool ShowThumbnails { get; set; } = true;
    [Parameter] public bool ShowFileType { get; set; } = false;
    [Parameter] public bool ShowUploadDate { get; set; } = false;
    [Parameter] public bool AllowRemove { get; set; } = true;
    [Parameter] public bool AllowClear { get; set; } = true;
    [Parameter] public bool AllowMultiple { get; set; } = true;

    // File restrictions
    [Parameter] public List<FileType>? AllowedFileTypes { get; set; }
    [Parameter] public List<string>? AllowedExtensions { get; set; }
    [Parameter] public long MaxFileSize { get; set; } = 10 * 1024 * 1024; // 10MB default
    [Parameter] public int MaxFiles { get; set; } = 10;

    // Permissions
    [Parameter] public bool CanUpload { get; set; } = true;
    [Parameter] public bool CanBrowse { get; set; } = true;

    // Empty state customization
    [Parameter] public string EmptyStateTitle { get; set; } = "No files uploaded";
    [Parameter] public string EmptyStateMessage { get; set; } = "Upload files or browse from your media library";

    // Events
    [Parameter] public EventCallback<FileDto> OnFilePreview { get; set; }
    [Parameter] public EventCallback<FileDto> OnFileDownload { get; set; }

    public enum FileDisplayMode
    {
        Grid,
        List
    }
}